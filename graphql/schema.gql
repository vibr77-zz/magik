
type Floor {
	title: String
	rooms: [Room]
	level: Int
	visible: Boolean
	activity: Boolean
	id: ID!
}

type Room{
  title: String!
  floor: Floor!
  floor_id: ID!
  id: ID!

}

type Tweet {
  id: ID!
  # The tweet text. No more than 140 characters!
  body: String
  # When the tweet was published
  date: Date
  # Who published the tweet
  Author: User
  # Views, retweets, likes, etc
  Stats: Stat
}

type User {
  id: ID!
  username: String
  first_name: String
  last_name: String
  full_name: String
  name: String @deprecated
  avatar_url: Url
}

type Stat {
  views: Int
  likes: Int
  retweets: Int
  responses: Int
}

type Notification {
  id: ID
  date: Date
  type: String
}

type Meta {
  count: Int
}

scalar Url
scalar Date

type Query {
  Rooms(limit: Int): [Room]
  Room(id: ID!): Room
  Floors(limit: Int): [Floor]
  Floor(id: ID!): Floor
}

type Mutation {
  createTweet(body: String): Tweet
  deleteTweet(id: ID!): Tweet
  markTweetRead(id: ID!): Boolean
}